export function ob(o) {
    return {
        map: (transform) => (obMap(o, transform)),
        filter: (predicate) => (obFilter(o, predicate)),
    };
}
////////////
////////////
ob.pipe = Object.freeze({
    map: (transform) => ((o) => obMap(o, transform)),
    filter: (transform) => ((o) => obFilter(o, transform)),
});
////////////
////////////
const obMap = (o, transform) => {
    return Object.fromEntries(Object.entries(o).map(([key, value]) => [key, transform(value, key)]));
};
const obFilter = (o, predicate) => {
    return Object.fromEntries(Object.entries(o).filter(([key, value]) => predicate(value, key)));
};
//# sourceMappingURL=ob.js.map