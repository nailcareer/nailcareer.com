var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _ShockDrop_params, _ShockDrop_indicator;
import { signal } from "../../nexus/state.js";
import { dragleave_has_exited_current_target } from "./utils/dragleave_has_exited_current_target.js";
export class ShockDrop {
    constructor(params) {
        _ShockDrop_params.set(this, void 0);
        _ShockDrop_indicator.set(this, signal(false));
        this.reset_indicator = () => {
            __classPrivateFieldGet(this, _ShockDrop_indicator, "f").value = false;
        };
        this.dragover = (event) => {
            event.preventDefault();
            if (__classPrivateFieldGet(this, _ShockDrop_params, "f").predicate(event))
                __classPrivateFieldGet(this, _ShockDrop_indicator, "f").value = true;
        };
        this.dragleave = (event) => {
            if (dragleave_has_exited_current_target(event))
                __classPrivateFieldGet(this, _ShockDrop_indicator, "f").value = false;
        };
        this.drop = (event) => {
            event.preventDefault();
            __classPrivateFieldGet(this, _ShockDrop_indicator, "f").value = false;
            if (__classPrivateFieldGet(this, _ShockDrop_params, "f").predicate(event))
                __classPrivateFieldGet(this, _ShockDrop_params, "f").handle_drop(event);
        };
        __classPrivateFieldSet(this, _ShockDrop_params, params, "f");
    }
    get indicator() {
        return __classPrivateFieldGet(this, _ShockDrop_indicator, "f").value;
    }
}
_ShockDrop_params = new WeakMap(), _ShockDrop_indicator = new WeakMap();
//# sourceMappingURL=drop.js.map