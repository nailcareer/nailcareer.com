var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
import * as state from "../../nexus/state.js";
export var mixin;
(function (mixin) {
    function css(...newStyles) {
        return function (Base) {
            return class extends Base {
                static get styles() {
                    return combineStyles(Base.styles, newStyles);
                }
            };
        };
    }
    mixin.css = css;
    function css_deferred(getNewStyles) {
        return function (Base) {
            return class extends Base {
                static get styles() {
                    return combineStyles(Base.styles, getNewStyles());
                }
            };
        };
    }
    mixin.css_deferred = css_deferred;
    function signals(signals) {
        return function (Base) {
            var _lean, _a;
            return _a = class extends Base {
                    constructor() {
                        super(...arguments);
                        _lean.set(this, null);
                    }
                    render() {
                        var _b;
                        return (_b = __classPrivateFieldGet(this, _lean, "f")) === null || _b === void 0 ? void 0 : _b.collect(() => super.render());
                    }
                    connectedCallback() {
                        super.connectedCallback();
                        __classPrivateFieldSet(this, _lean, signals.lean(() => this.requestUpdate()), "f");
                    }
                    disconnectedCallback() {
                        super.disconnectedCallback();
                        if (__classPrivateFieldGet(this, _lean, "f")) {
                            __classPrivateFieldGet(this, _lean, "f").stop();
                            __classPrivateFieldSet(this, _lean, null, "f");
                        }
                    }
                },
                _lean = new WeakMap(),
                _a;
        };
    }
    mixin.signals = signals;
    function flat(flat) {
        return function (Base) {
            var _lean_1, _a;
            return _a = class extends Base {
                    constructor() {
                        super(...arguments);
                        _lean_1.set(this, null);
                    }
                    render() {
                        var _b;
                        return (_b = __classPrivateFieldGet(this, _lean_1, "f")) === null || _b === void 0 ? void 0 : _b.collect(() => super.render());
                    }
                    connectedCallback() {
                        super.connectedCallback();
                        __classPrivateFieldSet(this, _lean_1, flat.lean(() => this.requestUpdate()), "f");
                    }
                    disconnectedCallback() {
                        super.disconnectedCallback();
                        if (__classPrivateFieldGet(this, _lean_1, "f")) {
                            __classPrivateFieldGet(this, _lean_1, "f").stop();
                            __classPrivateFieldSet(this, _lean_1, null, "f");
                        }
                    }
                },
                _lean_1 = new WeakMap(),
                _a;
        };
    }
    mixin.flat = flat;
    function reactor(r = state.reactor) {
        return function (Base) {
            var _lean_2, _a;
            return _a = class extends Base {
                    constructor() {
                        super(...arguments);
                        _lean_2.set(this, null);
                    }
                    render() {
                        var _b;
                        return (_b = __classPrivateFieldGet(this, _lean_2, "f")) === null || _b === void 0 ? void 0 : _b.collect(() => super.render());
                    }
                    connectedCallback() {
                        super.connectedCallback();
                        __classPrivateFieldSet(this, _lean_2, r.lean(() => this.requestUpdate()), "f");
                    }
                    disconnectedCallback() {
                        super.disconnectedCallback();
                        if (__classPrivateFieldGet(this, _lean_2, "f")) {
                            __classPrivateFieldGet(this, _lean_2, "f").stop();
                            __classPrivateFieldSet(this, _lean_2, null, "f");
                        }
                    }
                },
                _lean_2 = new WeakMap(),
                _a;
        };
    }
    mixin.reactor = reactor;
})(mixin || (mixin = {}));
function arrayize(item) {
    return [item].flat().filter(i => !!i);
}
const notUndefined = (x) => x !== undefined;
function combineStyles(parentStyles, newStyles) {
    var _a;
    const styles = [
        ...((_a = arrayize(parentStyles)) !== null && _a !== void 0 ? _a : []),
        ...arrayize(newStyles),
    ];
    return styles
        .flat()
        .filter(notUndefined);
}
//# sourceMappingURL=mixin.js.map