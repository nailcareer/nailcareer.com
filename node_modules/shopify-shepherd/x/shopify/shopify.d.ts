import { Remote } from "./remote/remote.js";
import { Options } from "./parts/options.js";
import { GqlProduct } from "./graphql/units/product.js";
import { all } from "./graphql/pagination/helpers/all.js";
import { first } from "./graphql/pagination/helpers/first.js";
import { GqlShop } from "./graphql/shop.js";
import { ShopifySettings } from "./remote/types/shopify_settings.js";
import { PageGenerator } from "./graphql/pagination/types/page_generator.js";
import { GqlCollection } from "./graphql/collections.js";
import { GqlCheckout } from "./graphql/checkout.js";
export declare class Shopify {
    static all: typeof all;
    static first: typeof first;
    static setup(settings: ShopifySettings): Shopify;
    remote: Remote;
    constructor(o: Options.Shopify);
    shop(): Promise<GqlShop>;
    product(o: Options.Product): Promise<GqlProduct>;
    products(o?: Options.Products): PageGenerator<GqlProduct>;
    collections(o?: Options.Collections): PageGenerator<GqlCollection>;
    tags(o?: Options.Tags): PageGenerator<string>;
    products_in_collection(o: Options.ProductsInCollection): PageGenerator<GqlProduct>;
    product_recommendations(o: Options.ProductRecommendations): Promise<GqlProduct[]>;
    specific_products(o: Options.SpecificProducts): Promise<(GqlProduct | null)[]>;
    checkout(o: Options.Checkout): Promise<GqlCheckout>;
    everything(): Promise<{
        shop: GqlShop;
        tags: string[];
        products: GqlProduct[];
        collections: GqlCollection[];
    }>;
}
