export declare namespace ob {
    const map: <O extends {}, Value>(o: O, transform: (value: O[keyof O], key: keyof O) => Value) => { [P in keyof O]: Value; };
    const filter: <O extends {}>(o: O, judge: (value: O[keyof O], key: keyof O) => boolean) => {
        [key: string]: O[keyof O];
    };
    namespace pipe {
        const map: <O extends {}, Value>(transform: (value: O[keyof O], key: keyof O) => Value) => (o: O) => { [P in keyof O]: Value; };
        const filter: <O extends {}>(transform: (value: O[keyof O], key: keyof O) => boolean) => (o: O) => {
            [key: string]: O[keyof O];
        };
    }
}
