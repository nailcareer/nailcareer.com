import { Op } from "../op/op.js";
import { Signal } from "./signal.js";
export class OpSignal extends Signal {
    constructor() {
        super(Op.loading());
    }
    async run(operation) {
        return Op.run(op => this.value = op, operation);
    }
    setLoading() {
        this.value = Op.loading();
    }
    setError(reason) {
        this.value = Op.error(reason);
    }
    setReady(payload) {
        this.value = Op.ready(payload);
    }
    get loading() {
        return Op.is.loading(this.value);
    }
    get error() {
        return Op.is.error(this.value);
    }
    get ready() {
        return Op.is.ready(this.value);
    }
    get payload() {
        return Op.payload(this.value);
    }
    select(choices) {
        return Op.select(this.value, choices);
    }
}
//# sourceMappingURL=op_signal.js.map