var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var _Scheduler_queue, _Scheduler_wait, _Scheduler_actuate;
import { debounce } from "../../tools/debounce/debounce.js";
export class Scheduler {
    constructor() {
        _Scheduler_queue.set(this, new Map());
        _Scheduler_wait.set(this, Promise.resolve());
        _Scheduler_actuate.set(this, debounce(0, () => {
            const functions = [...__classPrivateFieldGet(this, _Scheduler_queue, "f").values()];
            __classPrivateFieldGet(this, _Scheduler_queue, "f").clear();
            for (const fun of functions)
                fun();
        }));
    }
    get wait() {
        return __classPrivateFieldGet(this, _Scheduler_wait, "f");
    }
    add(symbol, fun) {
        __classPrivateFieldGet(this, _Scheduler_queue, "f").set(symbol, fun);
        __classPrivateFieldSet(this, _Scheduler_wait, __classPrivateFieldGet(this, _Scheduler_actuate, "f").call(this), "f");
    }
}
_Scheduler_queue = new WeakMap(), _Scheduler_wait = new WeakMap(), _Scheduler_actuate = new WeakMap();
//# sourceMappingURL=scheduler.js.map