import { render } from "lit";
import { apply_attributes } from "./apply_attributes.js";
export function apply_details(element, freshMeta = {}, oldMeta = {}) {
    const { content, attrs: fresh = {} } = freshMeta;
    const { attrs: old = {} } = oldMeta;
    function actuate(freshvalue, oldvalue, name, value) {
        if (freshvalue !== oldvalue) {
            if (freshvalue === undefined)
                element.removeAttribute(name);
            else
                element.setAttribute(name, value());
        }
    }
    if (fresh)
        apply_attributes(element, fresh);
    actuate(fresh.class, old === null || old === void 0 ? void 0 : old.class, "class", () => fresh.class);
    actuate(fresh.part, old === null || old === void 0 ? void 0 : old.part, "part", () => fresh.part);
    actuate(fresh.gpart, old === null || old === void 0 ? void 0 : old.gpart, "data-gpart", () => fresh.gpart);
    if (content)
        render(content, element, { host: element });
}
//# sourceMappingURL=apply_details.js.map