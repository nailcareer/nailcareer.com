import { InitFn, InitResult, SetupFn } from "./types.js";
import { Constructor } from "../../../../tools/constructor.js";
/** identity function to help you make an init function */
export declare const initFn: <I extends InitFn<any>>(fn: I) => I;
/** identity function to help you make an setup function */
export declare const setupFn: (fn: SetupFn) => SetupFn;
/** a class intended to be used with use.init via initiate() function */
export declare class Initiator {
    #private;
    cleanup(fn: () => void): void;
    deinit(): void;
}
/** wrap an initiator instance in an InitResult array */
export declare function initiator<I extends Initiator>(instance: I): InitResult<I>;
/** initiate an instance of an initiator class (helpful for use.init) */
export declare function initiate<C extends Constructor<Initiator>>(C: C): (...params: ConstructorParameters<C>) => InitFn<InstanceType<C>>;
