import { Op } from "@benev/slate";
import { GqlCollection, GqlProduct } from "shopify-shepherd";
export declare namespace Situation {
    namespace Base {
        type ProductList = {
            products: GqlProduct[];
            load_more: (() => void) | undefined;
            load_more_op: Op.For<void>;
        };
    }
    type CollectionList = {
        type: "collection_list";
        collections: GqlCollection[];
    };
    type ProductsInCollection = {
        type: "products_in_collection";
        collection_id: string;
    } & Base.ProductList;
    type AllProducts = {
        type: "all_products";
    } & Base.ProductList;
    type SearchResults = {
        type: "search_results";
    } & Base.ProductList;
    type SingleProduct = {
        type: "single_product";
        product: GqlProduct;
    };
    type NotFound = {
        type: "not_found";
        message?: string;
    };
    type Whatever = (CollectionList | ProductsInCollection | AllProducts | SearchResults | SingleProduct | NotFound);
    namespace Group {
        type ProductList = (ProductsInCollection | AllProducts | SearchResults);
    }
}
