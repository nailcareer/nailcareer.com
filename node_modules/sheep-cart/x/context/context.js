var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _Context_state;
import { Flat, Context as SlateContext } from "@benev/slate";
import { Cart } from "../carting/cart.js";
import { Modal } from "../modaling/modal.js";
import { init_state } from "./parts/init_state.js";
export class Context extends SlateContext {
    constructor(shopify, router, theme, cart_store) {
        super();
        this.shopify = shopify;
        this.router = router;
        this.theme = theme;
        _Context_state.set(this, void 0);
        this.modal = new Modal();
        this.set_route = (route) => __classPrivateFieldGet(this, _Context_state, "f").route = route;
        this.set_tags = (tags) => __classPrivateFieldGet(this, _Context_state, "f").tags = tags;
        this.set_collections = (collections) => __classPrivateFieldGet(this, _Context_state, "f").collections = collections;
        this.set_situation_op = (op) => __classPrivateFieldGet(this, _Context_state, "f").situation_op = op;
        this.toggle_cart_open = (open = !__classPrivateFieldGet(this, _Context_state, "f").cart_open) => {
            __classPrivateFieldGet(this, _Context_state, "f").cart_open = open;
        };
        __classPrivateFieldSet(this, _Context_state, init_state(router), "f");
        this.state = Flat.readonly(__classPrivateFieldGet(this, _Context_state, "f"));
        this.cart = new Cart(this.shopify, cart_store);
    }
}
_Context_state = new WeakMap();
//# sourceMappingURL=context.js.map