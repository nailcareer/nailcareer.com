export function sum_subtotal([firstunit, ...units]) {
    var _a;
    const currencyCode = firstunit.variant.price.currencyCode;
    const first = get_values(firstunit);
    const totals = {
        price: first.price,
        comparison: (_a = first.comparison) !== null && _a !== void 0 ? _a : first.price,
    };
    for (const unit of units) {
        const { price, comparison } = get_values(unit);
        totals.price += price;
        totals.comparison += comparison !== null && comparison !== void 0 ? comparison : price;
    }
    return {
        price: {
            currencyCode,
            amount: totals.price.toString(),
        },
        compareAtPrice: (totals.price !== totals.comparison)
            ? {
                currencyCode,
                amount: totals.comparison.toString(),
            }
            : undefined,
    };
}
function get_values({ variant, quantity }) {
    return {
        price: parseFloat(variant.price.amount) * quantity,
        comparison: variant.compareAtPrice && parseFloat(variant.compareAtPrice.amount) * quantity,
    };
}
//# sourceMappingURL=sum_subtotal.js.map